#+TITLE: Lambda-x86 Project Notes

I've decided to build a quick-and-dirty compiler following _An Incremental Approach to Compiler Construction_ by Abdulaziz Ghuloum. I can build a bigger compiler later.

I've also decided to ditch continuation-passing style for this first draft. I'll get my head around regular recursive implementations first.

* Tasks
** DONE Fix up parser to handle booleans
   CLOSED: [2020-03-26 Thu 22:06]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2020-03-26 Thu 22:06]
   :END:
** TODO Fix up type checker                                         :discuss:
I wonder if there's a way to use the type information to make my assembler more efficient. (I bet there is; I'll leave that for an enhancement.)
** TODO Use type information to improve instruction choice      :enhancement:
* Resources
** An Incremental Approach to Compiler Construction :ATTACH:
   :PROPERTIES:
   :Attachments: An%20Incremental%20Approach%20to%20Compiler%20Construction.pdf
   :ID:       91BA83F1-5BD6-42B1-BC3F-C3CEE4168023
   :END:
